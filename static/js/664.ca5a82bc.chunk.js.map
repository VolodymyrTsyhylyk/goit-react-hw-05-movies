{"version":3,"file":"static/js/664.ca5a82bc.chunk.js","mappings":"qbAGaA,EAASC,EAAAA,GAAAA,OAAH,gEAINC,EAAmBD,EAAAA,GAAAA,IAAH,gEAIhBE,EAAUF,EAAAA,GAAAA,IAAH,qEAIPG,EAAcH,EAAAA,GAAAA,IAAH,wEAIXI,EAAWJ,EAAAA,GAAAA,GAAH,2HAORK,EAAWL,EAAAA,GAAAA,GAAH,gKAORM,EAAQN,EAAAA,GAAAA,IAAH,yCAGLO,EAAOP,EAAAA,GAAAA,EAAH,8DAIJQ,EAAYR,EAAAA,GAAAA,EAAH,6CAITS,GAAUT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,0K,uHCkCpB,MAhEA,YAA+B,IAAVW,EAAS,EAATA,MACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAYC,KAAKC,MAAiC,IAA1B,UAAGL,EAAMM,cAAwB,IACzDC,EAAOP,EAAMQ,aAAaC,UAAU,EAAG,GACvCC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAOH,GAQ/B,OACE,iCACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAQI,KAAK,SAASC,QARf,WAAO,IAAD,MACnBd,EAAQ,iBAACW,QAAD,IAACA,GAAD,UAACA,EAAiBI,eAAlB,iBAAC,EAA0BC,aAA3B,aAAC,EAAiCC,YAAlC,QAA0C,MAO5C,sBAGA,gBACEC,IAAG,yCAAoCnB,EAAMoB,aAC7CC,IAAKrB,EAAMsB,MACXC,MAAM,cAGV,UAAC,KAAD,YACE,0BACGvB,EAAMsB,MADT,KACkBf,EADlB,QAGA,uCACA,uBAAIP,EAAMwB,YACV,0BACE,uCADF,IACsBrB,EADtB,QAGA,oCACA,wBACGH,EAAMyB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,wBAAcA,GAALD,eAKxB,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASE,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,mBACA,SAAC,KAAD,W,mBC5CR,MAlBA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOhC,EAAP,KAAciC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAACC,GACPJ,EAASI,MAERC,OAAM,SAAAC,GAAQC,EAAAA,GAAAA,MAAYD,QAC5B,CAACT,IAEU,OAAV9B,GACK,wCAEA,SAAC,EAAD,CAAWA,MAAOA,M,6KCrBvByC,EAAU,mCACVC,EAAQ,+BA2CDC,EAAY,SAACC,GACxB,OAAOC,IAAAA,IAAA,UAEAH,EAFA,iCAEiCD,EAFjC,iCAEiEG,IAErER,MAAK,SAACU,GACL,OAAOA,EAAST,SAGTU,EAAoB,WAC/B,OAAOF,IAAAA,IAAA,UAEAH,EAFA,uCAEuCD,EAFvC,gCApDI,IAwDRL,MAAK,SAACU,GACL,OAAOA,EAAST,SAGTW,EAAU,SAAClB,GACtB,OAAOe,IAAAA,IAAA,UAEAH,EAFA,kBAEkBZ,EAFlB,4BAE6CW,EAF7C,oBAIJL,MAAK,SAACU,GACL,OAAOA,EAAST,SAITY,EAAa,SAACnB,GACzB,OAAOe,IAAAA,IAAA,UAEAH,EAFA,kBAEkBZ,EAFlB,4BAE6CW,EAF7C,2BAIJL,MAAK,SAACU,GACL,OAAOA,EAAST,SAITF,EAAkB,SAACL,GAC9B,OAAOe,IAAAA,IAAA,UACGH,EADH,kBACqBZ,EADrB,oBACwCW,EADxC,oBAEJL,MAAK,SAACU,GACL,OAAOA,EAAST","sources":["pages/MovieDetailsPage/MovieDedetails.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetailsPage/MovieDetailsPage.js","services/moves-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink as RouteLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  width: 100px;\n  margin-bottom: 5px;\n`;\nexport const MovieInformation = styled.div`\n  padding-top: 10px;\n  display: flex;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const InfoWrapper = styled.div`\n  display: inline-block;\n  margin-left: 20px;\n`;\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 20px;\n`;\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 20px * 6) / 6);\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\nexport const Photo = styled.img`\n  width: 100px;\n`;\nexport const Name = styled.p`\n  font-weight: 500;\n  color: black;\n`;\nexport const Character = styled.p`\n  color: black;\n  \n`;\nexport const NavLink = styled(RouteLink)`\n  color: #999;\n  text-decoration: none;\n  font-size: 18px;\n  line-height: 1;\n  &:hover,\n  &:focus,\n  &.active {\n    color: #0082ab;\n  }\n`;","import { useRef } from 'react';\n\nimport { useNavigate, useLocation  } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  MovieInformation,\n  Wrapper,\n  InfoWrapper,\n  NavLink,\n} from \"../../pages/MovieDetailsPage/MovieDedetails.styled\";\n\n\nfunction MovieInfo({ movie }) {\n  const navigate = useNavigate();\n  const userScore = Math.round((`${movie.vote_average}` * 100) / 10);\n  const year = movie.release_date.substring(0, 4);\n  const location = useLocation();\n  const currentLocation = useRef(location);\n\n  // const setActive = ({isActive }) => ({ color: isActive ? 'var (---color-active)' : 'white'}))\n\n  const goBack = () => { \n    navigate(currentLocation?.current?.state?.from ?? '/');\n  }\n\n  return (\n    <>\n      <MovieInformation>\n        <Wrapper>\n          <Button type=\"button\" onClick={goBack}>\n            Go back\n          </Button>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt={movie.title}\n            width=\"250px\"\n          />\n        </Wrapper>\n        <InfoWrapper>\n          <h2>\n            {movie.title} ({year})\n          </h2>\n          <h3>Overview:</h3>\n          <p>{movie.overview}</p>\n          <p>\n            <b>User Score:</b> {userScore}%\n          </p>\n          <h3>Genres</h3>\n          <ul>\n            {movie.genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ul>\n        </InfoWrapper>\n      </MovieInformation>\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n}\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieInfo from \"../../components/MovieInfo/MovieInfo\";\nimport { getMovieDetails } from \"../../services/moves-api\";\nimport { toast } from 'react-toastify';\n\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then((data) => {\n      setMovie(data);\n      })\n      .catch(er => { toast.error(er);})\n  }, [movieId]);\n\n  if (movie === null) {\n    return <div>NOT FOUND</div>;\n  } else {\n    return <MovieInfo movie={movie} />;\n  }\n}\nexport default MovieDetailsPage;","import axios from \"axios\";\nconst API_KEY = \"cebf74f2036e82ff6c32c96394fea389\";\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst page = 1;\n\n// function sendRequest(url) {\n//   return fetch(url).then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     }\n//     return Promise.reject(new Error('No movies found on request'));\n//   });\n// }\n\n// function getTrendingMovies() {\n//   const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n//   return sendRequest(url);\n// }\n// function getMovies(query) {\n//   const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n//   return sendRequest(url);\n// }\n// function getMovieDetails(id) {\n//   const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n//   return sendRequest(url);\n// }\n// function getCast(id) {\n//   const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n//   return sendRequest(url);\n// }\n// function getReviews(id) {\n//   const url = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n//   return sendRequest(url);\n// }\n\n// const API = {\n//   getMovies,\n//   getTrendingMovies,\n//   getCast,\n//   getReviews,\n//   getMovieDetails,\n// };\n\n// export default API;\n\nexport const getMovies = (query) => {\n  return axios\n    .get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\nexport const getTrendingMovies = () => {\n  return axios\n    .get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\nexport const getCast = (movieId) => {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport const getReviews = (movieId) => {\n  return axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport const getMovieDetails = (movieId) => {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => {\n      return response.data;\n    });\n};\n\n\n"],"names":["Button","styled","MovieInformation","Wrapper","InfoWrapper","CastList","CastItem","Photo","Name","Character","NavLink","RouteLink","movie","navigate","useNavigate","userScore","Math","round","vote_average","year","release_date","substring","location","useLocation","currentLocation","useRef","type","onClick","current","state","from","src","poster_path","alt","title","width","overview","genres","map","id","name","to","movieId","useParams","useState","setMovie","useEffect","getMovieDetails","then","data","catch","er","toast","API_KEY","BASE_URL","getMovies","query","axios","response","getTrendingMovies","getCast","getReviews"],"sourceRoot":""}